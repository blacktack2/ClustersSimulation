#version 430 core

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

struct Atom {
    float x, y, vx, vy, fx, fy;
	uint atomType;
};

layout(std430, binding = 2) buffer AtomBuffer {
	Atom atoms[10000];
};

layout(location = 1) uniform vec2 simulationBounds = vec2(500.0f, 500.0f);
layout(location = 2) uniform float interactionRange2 = 6400.0f;
layout(location = 3) uniform float atomDiameter = 3.0f;
layout(location = 4) uniform float collisionForce = 1.0f;
layout(location = 5) uniform float dragForce = 0.5f;
layout(location = 6) uniform float dt = 1.0f;

void main() {
	uint id = gl_GlobalInvocationID.x;
	
	Atom atom = atoms[id];

	vec2 position = vec2(atom.x, atom.y);
	vec2 velocity = vec2(atom.vx, atom.vy);
	vec2 force = vec2(atom.fx, atom.fy);

	velocity = (velocity + force * dt) * dragForce;
	position += velocity;

	position.x += (position.x < 0) ? simulationBounds.x :
		(position.x >= simulationBounds.x) ? -simulationBounds.x : 0.0f;
	position.y += (position.y < 0) ? simulationBounds.y :
		(position.y >= simulationBounds.y) ? -simulationBounds.y : 0.0f;

	atom.x = position.x;
	atom.y = position.y;
	atom.vx = velocity.x * dt;
	atom.vy = velocity.y * dt;
	atom.fx = 0.0f;
	atom.fy = 0.0f;
	atoms[id] = atom;
}
